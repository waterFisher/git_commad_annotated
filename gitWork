git init
git clone
git status     git status -s
git diff
git add [files]
git commit -m "XXXXXXX"
git commit -a                // leting you skip "git add "part ,will automatically staged file and commit
git pull		// fecth & merge
git push
git rm      OR   git rm --cache  [file]
git restore <file>     	// can restore file which you run "rm " to delete it .
git checkout <sha> -- <file name>    // bring back deleted file
git mv [file1] [file2]
git log --stat    		//show details
git log --pretty=oneline		// show simple information
git log --pretty=format:"%h %s" --graph	//formating information

git add [file1]    //follow with "git commit --amend" can add file and amend commit message
git commit --amend 	//edit previous message

Inspecting a Remote
	git remote show origin

Removing and renaming Remotes
	git remote rename <old> <new>
	git remote rm <remote>			//will be delete immediately

Adding Remote
		git remote add [remoteName]

Taggin :
	listing tag	git tag
	searching tag 	git tag -l "STRINGS"
	creating tag 	annotated tags 	git tag -a [tags] -m "some message"
			lightweight tags 	git tag [tags]
	show tag message 	git show [tags]
	tagging later		git tag -a [tags] <sha>	//if you forgot to tag,this command will be helpful to tag later.
	sharing tags	git push origin [tags]
			git push origin --tags   //one shot but more tags will be transfers
	git aliases	git config --global alias.[AB] [command]
		exp:	git config --global alias.ci commit


Branch:
	creating branch		git branch [fileName]
	see which branch you are there		git log --oneline --decorate
	switching branches	git checkout [branchName]
						git checkout -b [branchName]		//changing and switching
						git checkout -b [newBranch] [origin/branch]
	Tracking branches
						git checkout --track [origin/branch]
						git checkout -b [newBranch]  [origin/branch]
						git checkout -u [origin/branch] 	//local branch set it to remote branch
    view branches
						git branch -vv
	deleting remote branch
						git push --delete [remoteBranch]


	merge				git merge [branchName]
	merge conflict		git add [file] 			//add file and marker resolution
	to see last commit each branches	git branch -v
	to see have merged or unmerged
						git branch { --merge | --no-merge }


Pushing
	git push <remote> <branch>

Don't type your password every time
	git config --global credential.helper cache

Rebasing
		git rebase [branch]


Git on the server

local protocol
	to add local exsiting repo
		git remote add [local_project] [local_project_path]

git clone --bare [my_project] [my_project.git]		\\without a working directory, but a repo*
													\\taking project .git dir* files
git init --bare --shared							\\it will be helpful for Remote git pull or git push


adding test string
